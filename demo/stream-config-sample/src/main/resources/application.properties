#程序配置
spring.application.name=configs-sample
#全局rabbitmq配置
spring.rabbitmq.host=127.0.0.1
spring.rabbitmq.port=5672
spring.rabbitmq.username=bqniu
spring.rabbitmq.password=123456
#spring.rabbitmq.virtual-host=/
#spring cloud stream配置
#spring.cloud.stream.instance-count=
#spring.cloud.stream.instance-index=
#bindings配置
#默认为null 将使用默认binder
spring.cloud.stream.bindings.in.binder=rabbit1
#类型参见org.springframework.util.MimeTypeUtils 默认为application/json
spring.cloud.stream.bindings.in.content-type=application/json
#若无destination配置则默认在rabbitmq中创建，命名规范如<channel>.<group>的exchange
spring.cloud.stream.bindings.in.destination=input
#配置了group则默认持久化队列
spring.cloud.stream.bindings.in.group=newpwr.cab2
#开启分区功能
#spring.cloud.stream.bindings.in.consumer.partitioned=true
#spring.cloud.stream.bindings.in.producer.

spring.cloud.stream.bindings.out.binder=rabbit2
spring.cloud.stream.bindings.out.content-type=application/json
spring.cloud.stream.bindings.out.destination=output
#若此channel为输出消息可以不用配置group,此时生产者是没有group这个概念的
#spring.cloud.stream.bindings.out.group=newpwr.cab2
#spring.cloud.stream.bindings.out.consumer.
#spring.cloud.stream.bindings.out.producer.

#binders配置
#绑定器配置是被认为是默认绑定器的候选配置，还是只能在显式引用时使用。这允许在不干扰默认处理的情况下添加绑定器配置。默认是true
spring.cloud.stream.binders.rabbit1.default-candidate=true
#配置是否将继承应用程序本身的环境。
spring.cloud.stream.binders.rabbit1.inherit-environment=true
#Binder类型。它通常引用class:path上找到的一个绑定，正常情况下为META-INF/spring-binders.file内的一个键值
spring.cloud.stream.binders.rabbit1.type=rabbit
#以获取可用于自定义绑定器环境的一组属性。配置好后，创建绑定的上下文不是应用程序上下文的子上下文。这允许在绑定器组件和应用程序组件之间完全分离。
spring.cloud.stream.binders.rabbit1.environment.spring.rabbitmq.host=127.0.0.1
spring.cloud.stream.binders.rabbit1.environment.spring.rabbitmq.port=5672
spring.cloud.stream.binders.rabbit1.environment.spring.rabbitmq.username=bqniu
spring.cloud.stream.binders.rabbit1.environment.spring.rabbitmq.password=123456

spring.cloud.stream.binders.rabbit2.default-candidate=true
spring.cloud.stream.binders.rabbit2.inherit-environment=true
spring.cloud.stream.binders.rabbit2.type=rabbit
spring.cloud.stream.binders.rabbit2.environment.spring.rabbitmq.host=127.0.0.1
spring.cloud.stream.binders.rabbit2.environment.spring.rabbitmq.port=5672
spring.cloud.stream.binders.rabbit2.environment.spring.rabbitmq.username=bqniu
spring.cloud.stream.binders.rabbit2.environment.spring.rabbitmq.password=123456

#实在太多了，最好自己看看源码，结合自己需要的进行配置
#以下讲解比较需要注意的配置
#指定消费者消费的routingkey
spring.cloud.stream.rabbit.bindings.in.consumer.binding-routing-key=service-b.*
#指定exchange类型 fanout/topic/direct
spring.cloud.stream.rabbit.bindings.in.consumer.exchangeType=topic
#死信配置，消费失败将投入该队列，规则为后缀为.dlq的queue
spring.cloud.stream.rabbit.bindings.in.consumer.autoBindDlq=true
spring.cloud.stream.rabbit.bindings.in.consumer.republishToDlq=true
#指定生产者消息投递的规则
spring.cloud.stream.rabbit.bindings.out.producer.routing-key-expression='''addProduct.*'''
#指定exchange类型 fanout/topic/direct
spring.cloud.stream.rabbit.bindings.out.producer.exchange-type=fanout

#spring.cloud.stream.rabbit.bindings.in.producer.transacted=
#spring.cloud.stream.rabbit.bindings.in.producer.routing-key-expression.
#spring.cloud.stream.rabbit.bindings.in.producer.queue-name-group-only=
#spring.cloud.stream.rabbit.bindings.in.producer.prefix=
#spring.cloud.stream.rabbit.bindings.in.producer.overflow-behavior=
#spring.cloud.stream.rabbit.bindings.in.producer.max-priority=
#spring.cloud.stream.rabbit.bindings.in.producer.max-length-bytes=
#spring.cloud.stream.rabbit.bindings.in.producer.max-length=
#spring.cloud.stream.rabbit.bindings.in.producer.lazy=
#spring.cloud.stream.rabbit.bindings.in.producer.header-patterns=
#spring.cloud.stream.rabbit.bindings.in.producer.expires=
#spring.cloud.stream.rabbit.bindings.in.producer.exchange-type=
#spring.cloud.stream.rabbit.bindings.in.producer.exchange-durable=
#spring.cloud.stream.rabbit.bindings.in.producer.exchange-auto-delete=
#spring.cloud.stream.rabbit.bindings.in.producer.dlq-ttl=
#spring.cloud.stream.rabbit.bindings.in.producer.dlq-overflow-behavior=
#spring.cloud.stream.rabbit.bindings.in.producer.dlq-max-priority=
#spring.cloud.stream.rabbit.bindings.in.producer.dlq-max-length-bytes=
#spring.cloud.stream.rabbit.bindings.in.producer.dlq-max-length=
#spring.cloud.stream.rabbit.bindings.in.producer.dlq-lazy=
#spring.cloud.stream.rabbit.bindings.in.producer.dlq-expires=
#spring.cloud.stream.rabbit.bindings.in.producer.dlq-dead-letter-routing-key=
#spring.cloud.stream.rabbit.bindings.in.producer.delivery-mode.
#spring.cloud.stream.rabbit.bindings.in.producer.delay-expression.
#spring.cloud.stream.rabbit.bindings.in.producer.batch-buffer-limit=
#spring.cloud.stream.rabbit.bindings.in.producer.batch-size=
#spring.cloud.stream.rabbit.bindings.in.producer.batch-timeout=
#spring.cloud.stream.rabbit.bindings.in.producer.batching-enabled=
#spring.cloud.stream.rabbit.bindings.in.producer.auto-bind-dlq=
#spring.cloud.stream.rabbit.bindings.in.producer.bind-queue=
#spring.cloud.stream.rabbit.bindings.in.producer.binding-routing-key=
#spring.cloud.stream.rabbit.bindings.in.producer.compress=
#spring.cloud.stream.rabbit.bindings.in.producer.confirm-ack-channel=
#spring.cloud.stream.rabbit.bindings.in.producer.dead-letter-exchange=
#spring.cloud.stream.rabbit.bindings.in.producer.dead-letter-exchange-type=
#spring.cloud.stream.rabbit.bindings.in.producer.dead-letter-queue-name=
#spring.cloud.stream.rabbit.bindings.in.producer.dead-letter-routing-key=
#spring.cloud.stream.rabbit.bindings.in.producer.declare-dlx=
#spring.cloud.stream.rabbit.bindings.in.producer.declare-exchange=
#spring.cloud.stream.rabbit.bindings.in.producer.delayed-exchange=
#spring.cloud.stream.rabbit.bindings.in.producer.dlq-dead-letter-exchange=
#spring.cloud.stream.rabbit.bindings.in.producer.ttl=
#
#spring.cloud.stream.rabbit.bindings.in.consumer.tx-size=
#spring.cloud.stream.rabbit.bindings.in.consumer.requeue-rejected=
#spring.cloud.stream.rabbit.bindings.in.consumer.republish-to-dlq=
#spring.cloud.stream.rabbit.bindings.in.consumer.republish-delivey-mode.
#spring.cloud.stream.rabbit.bindings.in.consumer.recovery-interval=
#spring.cloud.stream.rabbit.bindings.in.consumer.queue-declaration-retries=
#spring.cloud.stream.rabbit.bindings.in.consumer.prefetch=
#spring.cloud.stream.rabbit.bindings.in.consumer.missing-queues-fatal=
#spring.cloud.stream.rabbit.bindings.in.consumer.max-concurrency=
#spring.cloud.stream.rabbit.bindings.in.consumer.frame-max-headroom=
#spring.cloud.stream.rabbit.bindings.in.consumer.failed-declaration-retry-interval=
#spring.cloud.stream.rabbit.bindings.in.consumer.exclusive=
#spring.cloud.stream.rabbit.bindings.in.consumer.durable-subscription=
#spring.cloud.stream.rabbit.bindings.in.consumer.container-type.
#spring.cloud.stream.rabbit.bindings.in.consumer.consumer-tag-prefix=
#spring.cloud.stream.rabbit.bindings.in.consumer.acknowledge-mode=MANUAL
#spring.cloud.stream.rabbit.bindings.in.consumer.transacted=
#spring.cloud.stream.rabbit.bindings.in.consumer.queue-name-group-only=
#spring.cloud.stream.rabbit.bindings.in.consumer.prefix=
#spring.cloud.stream.rabbit.bindings.in.consumer.overflow-behavior=
#spring.cloud.stream.rabbit.bindings.in.consumer.max-priority=
#spring.cloud.stream.rabbit.bindings.in.consumer.max-length-bytes=
#spring.cloud.stream.rabbit.bindings.in.consumer.max-length=
#spring.cloud.stream.rabbit.bindings.in.consumer.lazy=
#spring.cloud.stream.rabbit.bindings.in.consumer.header-patterns=
#spring.cloud.stream.rabbit.bindings.in.consumer.expires=
#spring.cloud.stream.rabbit.bindings.in.consumer.exchange-type=
#spring.cloud.stream.rabbit.bindings.in.consumer.exchange-durable=
#spring.cloud.stream.rabbit.bindings.in.consumer.exchange-auto-delete=
#spring.cloud.stream.rabbit.bindings.in.consumer.dlq-ttl=
#spring.cloud.stream.rabbit.bindings.in.consumer.dlq-overflow-behavior=
#spring.cloud.stream.rabbit.bindings.in.consumer.dlq-max-priority=
#spring.cloud.stream.rabbit.bindings.in.consumer.dlq-max-length-bytes=
#spring.cloud.stream.rabbit.bindings.in.consumer.dlq-max-length=
#spring.cloud.stream.rabbit.bindings.in.consumer.dlq-lazy=
#spring.cloud.stream.rabbit.bindings.in.consumer.dlq-expires=
#spring.cloud.stream.rabbit.bindings.in.consumer.dlq-dead-letter-routing-key=
#spring.cloud.stream.rabbit.bindings.in.consumer.auto-bind-dlq=
#spring.cloud.stream.rabbit.bindings.in.consumer.bind-queue=
#spring.cloud.stream.rabbit.bindings.in.consumer.binding-routing-key=
#spring.cloud.stream.rabbit.bindings.in.consumer.dead-letter-exchange=
#spring.cloud.stream.rabbit.bindings.in.consumer.dead-letter-exchange-type=
#spring.cloud.stream.rabbit.bindings.in.consumer.dead-letter-queue-name=
#spring.cloud.stream.rabbit.bindings.in.consumer.dead-letter-routing-key=
#spring.cloud.stream.rabbit.bindings.in.consumer.declare-dlx=
#spring.cloud.stream.rabbit.bindings.in.consumer.declare-exchange=
#spring.cloud.stream.rabbit.bindings.in.consumer.delayed-exchange=
#spring.cloud.stream.rabbit.bindings.in.consumer.dlq-dead-letter-exchange=
#spring.cloud.stream.rabbit.bindings.in.consumer.ttl=
